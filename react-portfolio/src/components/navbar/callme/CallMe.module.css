* {
    box-sizing: border-box;
  }
  
  .callmeSection {
    display: grid;
    gap: 4rem;
    align-items: center;
    justify-content: center;
  }
  
  .callmeText {
    margin: 0;
    font-size: 2.25rem;
    color: hsl(0 0% 40%);
    text-align: center;
    background: linear-gradient(hsl(0 0% 80%), hsl(0 0% 50%));
    color: transparent;
    background-clip: text;
  }
  
  .code {
    font-size: 3rem;
    display: flex;
    flex-wrap: nowrap;
    color: hsl(0 0% 100%);
    border-radius: 1rem;
    background: hsl(0 0% 6%);
    justify-content: center;
    box-shadow: 0 1px hsl(0 0% 100% / 0.25) inset;
  }
  
  .code:hover {
    cursor: grab;
  }
  
  .digit {
    display: flex;
    height: 100%;
    padding: 5.5rem 1rem;
  }
  
  .digit:focus-visible {
    outline-color: hsl(0 0% 50% / 0.25);
    outline-offset: 1rem;
  }
  
  .digit span {
    scale: calc(var(--active, 0) + 0.5);
    filter: blur(calc((1 - var(--active, 0)) * 1rem));
    transition: scale calc(((1 - var(--active, 0)) + 0.2) * 1s), filter calc(((1 - var(--active, 0)) + 0.2) * 1s);
  }
  
  .digit:first-of-type {
    padding-left: 5rem;
  }
  
  .digit:last-of-type {
    padding-right: 5rem;
  }
  
  .digit:is(:hover, :focus-visible) {
    --active: 1;
  }
  .digit:is(:hover, :focus-visible) + .digit,
  .digit:has(+ .digit:is(:hover, :focus-visible)) {
    --active: calc(sin(50deg));
  }
  .digit:is(:hover, :focus-visible) + .digit + .digit,
  .digit:has(+ .digit + .digit:is(:hover, :focus-visible)) {
    --active: calc(sin(45deg));
  }
  .digit:is(:hover, :focus-visible) + .digit + .digit + .digit,
  .digit:has(+ .digit + .digit + .digit:is(:hover, :focus-visible)) {
    --active: calc(sin(35deg));
  }
  .digit:is(:hover, :focus-visible) + .digit + .digit + .digit + .digit,
  .digit:has(+ .digit + .digit + .digit + .digit:is(:hover, :focus-visible)) {
    --active: calc(sin(25deg));
  }
  .digit:is(:hover, :focus-visible) + .digit + .digit + .digit + .digit + .digit,
  .digit:has(+ .digit + .digit + .digit + .digit + .digit:is(:hover, :focus-visible)) {
    --active: calc(sin(15deg));
  }
  

  .callImage {
    position: relative; /* Maintain the relative position */
    top: 22px; /* Adjust this value to position it directly over the text */
    left: 50%; /* Center the image horizontally */
    transform: translateX(-50%); /* Shift left by half its width to center it */
    width: 250px; /* Adjust the width based on your image size */
    height: 250px; /* Maintain aspect ratio */
    z-index: 1; /* Ensure the image sits above the text */
    padding-bottom: 10px;
  }